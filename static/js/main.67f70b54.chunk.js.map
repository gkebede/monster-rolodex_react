{"version":3,"sources":["components/search-box/serach-box.component.jsx","api/JsonPlaceholder.js","components/card/card.componenet.jsx","components/card-lists/card-list.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handelChange","className","type","onChange","axios","create","baseURL","Card","props","src","monster","id","alt","name","style","color","email","CardList","monsters","map","App","josnApi","a","JsonPlaceholder","get","state","serachField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+VAIaA,EAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACtC,OACQ,uBAAOC,UAAU,SACXC,KAAK,SACLH,YAAcA,EACdI,SAAUH,K,gBCPXI,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,yCCAAC,G,YAAO,SAACC,GACjB,OACA,sBAAKP,UAAU,iBAAf,UACI,qBAAKQ,IAAG,+BAA0BD,EAAME,QAAQC,GAAxC,0BAAoEC,IAAI,KAChF,6BAAKJ,EAAME,QAAQG,OACnB,sBAAMC,MAAO,CAACC,MAAO,QAArB,SAA+BP,EAAME,QAAQM,aCFxCC,EAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACtB,OACI,qBAAKjB,UAAU,YAAf,SAEQiB,EAASC,KAAI,SAAAT,GAAO,OACjB,cAAC,EAAD,CAAwBA,QAASA,GAArBA,EAAQC,UC+CxBS,E,4MArCbC,Q,sBAAU,sBAAAC,EAAA,sEACIC,EAAgBC,IAAI,UADxB,mF,EAITC,MAAQ,CACPP,SAAS,GACTQ,YAAY,I,uDAhBf,WAAqB,IAAD,OAKnBC,MAAM,8CACgBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACd,SAAUa,S,oBAe7D,WAAS,IAAD,OACP,EAAgCE,KAAKR,MAA9BP,EAAP,EAAOA,SAAUQ,EAAjB,EAAiBA,YACXQ,EAAmBhB,EAASiB,QAAO,SAAAzB,GAAO,OAC9CA,EAAQG,KAAKuB,cAAcC,SAASX,EAAYU,kBAGnD,OAEE,sBAAMnC,UAAU,MAAhB,UAGE,kDACA,cAAC,EAAD,CACAF,YAAc,kBACdC,aAAgB,SAACsC,GAAD,OAAO,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUtB,SAAYgB,W,GAvCRO,IAAMC,WCEVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.67f70b54.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ({placeholder, handelChange}) => {\r\n  return (  \r\n          <input className='search'\r\n                type=\"search\"\r\n                placeholder= {placeholder}\r\n                onChange={handelChange}\r\n           />\r\n  )\r\n}","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com'\r\n})","import React from 'react';\r\nimport './card-list.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"\" />\r\n        <h3>{props.monster.name}</h3>\r\n        <span style={{color: 'gray'}}>{props.monster.email}</span>\r\n    </div>\r\n    )\r\n}","import React from \"react\";\r\nimport  './card-list.styles.css';\r\nimport { Card } from \"../card/card.componenet\";\r\n// src\\components\\card-lists\\card-list.styles.css\r\n\r\n\r\nexport const CardList = ({monsters}) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                monsters.map(monster =>(\r\n                   <Card  key={monster.id} monster={monster} />\r\n               \r\n            ))}\r\n        </div>\r\n    )\r\n}","import React from 'react';\n\nimport {SearchBox} from './components/search-box/serach-box.component'\n\nimport './App.css';\n\n// import Display from './components/Display';\nimport JsonPlaceholder from './api/JsonPlaceholder';\nimport {CardList} from './components/card-lists/card-list.components';\n\n class App extends React.Component {\n componentDidMount() {\n   // const users = this.josnApi();\n   // const output = JsonPlaceholder.get('/users');\n    //this.setState({monsters: users})\n\n  fetch('https://jsonplaceholder.typicode.com/users')\n                       .then(response => response.json())\n                       .then(users => this.setState({monsters: users}))\n\n }\n  josnApi = async () => {\n   return await JsonPlaceholder.get('/users');\n  }\n\n   state = {\n    monsters:[],\n    serachField:''\n\n  }\n\n \n\n  render(){\n   const {monsters, serachField} = this.state;\n   const filteredMonsters = monsters.filter(monster =>\n     monster.name.toLowerCase().includes(serachField.toLowerCase())\n     )\n  \n  return (\n    \n    <div  className=\"App\">\n     \n      {/* //<CardList monsters = {this.state.monsters} /> */}\n      <h1>Monsters Rolodex</h1>\n      <SearchBox \n      placeholder = 'Search monsters'\n      handelChange = {(e) => this.setState({serachField: e.target.value})}\n      />\n     <CardList monsters = {filteredMonsters} />\n\n\n    </div>\n  )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}